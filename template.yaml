AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for Lambda functions and S3 bucket

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: workshop4bucket

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3FullAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'

  LambdaFunction1:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaFunction1
      Code:
        ZipFile: |
          import boto3
          def lambda_handler(event, context):
              s3 = boto3.client('s3')
              bucket_name = 'workshop4bucket'
              object_key = 'insurance.csv'
              try:
                  response = s3.get_object(Bucket=bucket_name, Key=object_key)
                  data = response['Body'].read()
                  # Do something with the data
                  print(data)
                  return {
                      'statusCode': 200,
                      'body': 'Hello from Lambda.'
                  }
              except Exception as e:
                  print(f"Error: {e}")
                  return {
                      'statusCode': 500,
                      'body': 'Error.'
                  }
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8

  LambdaFunction2:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaFunction2
      Code:
        ZipFile: |
          import csv
          import boto3
          import json 
          def lambda_handler(event, context):
              header = ['Name', 'Age', 'Profession']
              data = [('John', '25', 'Engineer'),
                      ('Anna', '28', 'Doctor'),
                      ('Peter', '30', 'Artist')]
              filename = 'people.csv'
              with open('/tmp/' + filename, 'w', newline='') as f:
                  writer = csv.writer(f)
                  writer.writerow(header)
                  writer.writerows(data)
              bucket = 'workshop4bucket'  
              s3 = boto3.client('s3')
              s3.upload_file('/tmp/' + filename, bucket, filename)
              return {
                  'statusCode': 200,
                  'body': json.dumps('CSV file uploaded to S3')
              }
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
